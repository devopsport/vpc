name: Pipeline

on:
  push:
    branches:
      - master

jobs:
  Pipeline:
    name: Default
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Generate PROJECTKEY
      run: echo "PROJECT_KEY=$(echo "${GITHUB_REPOSITORY}" | cut -d "/" -f2)" >> $GITHUB_ENV

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=team-devopsport
          -Dsonar.projectKey=terraform-${{ env.PROJECT_KEY }}
          -Dsonar.qualitygate.wait=true
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run Snyk to check Kubernetes manifest file for issues
      run: |
        curl https://static.snyk.io/cli/latest/snyk-linux -o /usr/local/bin/snyk
        chmod +x /usr/local/bin/snyk
        snyk auth "${{ secrets.SNYK_TOKEN }}"
        snyk iac test --report --org="${{ secrets.SNYK_ORG }}" --severity-threshold=low --target-name="$(echo "${GITHUB_REPOSITORY}" | cut -d "/" -f2)"

    - name: Release
      run: ./.github/workflows/release.sh
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: GetPort
      run: |
        moduleName=$(echo ${GITHUB_REPOSITORY} | cut -d "/" -f2)
        versionRelease=$(cat /tmp/version.txt)
        access_token=$(curl --location --request POST 'https://api.getport.io/v1/auth/access_token' --header 'Content-Type: application/json' --data-raw '{
          "clientId": "5YwA7iVqrguZ2FbGR7wN5Nca6RXJSH4H",
          "clientSecret": "BcyJOu8lcwcQNVzkeYjZPd3KpJAlatJkjVwBKPdsqo1pPzKyeB6kBHHjVJMQ9kfI"
        }' | jq '.accessToken' | sed 's/"//g')

        blueprint_id='module_release'

        curl --location --request POST "https://api.getport.io/v1/blueprints/${blueprint_id}/entities?upsert=true" 	--header "Authorization: Bearer $access_token" 	--header "Content-Type: application/json" 	--data-raw '{
          "identifier": "'${moduleName}-${versionRelease}'",
          "title": "'${moduleName}-${versionRelease}'",
          "properties": {"version":["'${versionRelease}'"],"repository_tag":"https://github.com/devopsport/'${moduleName}'/tree/'${versionRelease}'","quality":"Passed","security":"Passed","workflow_id":"'${GITHUB_RUN_ID}'","link_to_the_ci":"https://github.com/devopsport/'${moduleName}'/actions/runs/'${GITHUB_RUN_ID}'/job/'${GITHUB_RUN_NUMBER}'","repository":"https://github.com/devopsport/'${moduleName}'","repository_id":"'${moduleName}'","deprecated":false},
          "relations": {"module_repository":"'${moduleName}'"}
        }'

        blueprint_id='module_repository'

        curl --location --request POST "https://api.getport.io/v1/blueprints/${blueprint_id}/entities?upsert=true" 	--header "Authorization: Bearer $access_token" 	--header "Content-Type: application/json" 	--data-raw '{
          "identifier": "'${moduleName}'",
          "title": "'${moduleName}'",
          "properties": {"url":"https://github.com/devopsport/'${moduleName}'","security":true,"latest_version":["'${versionRelease}'"],"quality":true},
          "relations": {"organization":"icarus","git_hub_team":"admin-team"}
        }'